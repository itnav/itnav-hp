---
import Layout from '@/layouts/Layout.astro';
import Thumbnail from './_/BlogThumbnail.svelte';
import { fetchBlogById } from '@/api/cms/fetch/blogs';

export const prerender = false;

const blogId = Astro.params.id!;

// ブログ記事の取得
const blog = await fetchBlogById(blogId);

const blogTitle = blog.title;
const blogDescription = blog.content.rendered
  .replace(/<("[^"]*"|'[^']*'|[^'">])*>/g, '')
  .slice(0, 104);

const blogThumbnail = getFeaturedImage(blog);

function getFeaturedImage(post: any) {
  return post._embedded['wp:featuredmedia']
    ? post._embedded['wp:featuredmedia'][0].source_url
    : '';
}

function getTagsAndCategories(post: any) {
  const postTags = post._embedded['wp:term'][1] || [];
  const postCategories = post._embedded['wp:term'][0] || [];
  return { postTags, postCategories };
}

const { postTags } = getTagsAndCategories(blog);
---

<Layout
  seo={{
    title: blog.title,
    description: blogDescription,
    openGraph: {
      basic: {
        title: blogTitle,
        type: 'article',
        image: blogThumbnail,
      },
    },
  }}
  main={{
    class: 'main app-page-padding-y app-page-padding-x',
  }}
>
  <h1 class="h1">{blog.title.rendered}</h1>

  <div class="tags">
    {
      postTags.length > 0 ? (
        postTags.map((tag: any) => <span class="tag"># {tag.name}</span>)
      ) : (
        <span>タグがありません</span>
      )
    }
  </div>

  <article class="article">
    <Thumbnail
      class="thumbnail"
      transition:name="blog"
      id={blogId}
      src={blogThumbnail}
      alt=""
    />

    <div class="article-content">
      <section class="article-text" set:html={blog.content.rendered} />
    </div>
  </article>

  <style scoped lang="scss">
    :global(.main) {
      width: 100%;
      max-width: 1024px;
      margin: 0 auto;
    }

    .h1 {
      margin-bottom: 16px;
      font-size: rpx(min(26px, 26rpx), mp);
      font-weight: bold;
    }

    .tags {
      margin-bottom: 32px;
      color: $primary;
    }
    .tag {
      font-size: 16px;
      line-height: 2;
    }

    .thumbnail {
      display: block;
      width: 100%;
      aspect-ratio: 16 / 9;
      margin-bottom: 32px;
      border: 2px solid $outline-variant;
      border-top-left-radius: 24px;
      border-bottom-right-radius: 24px;
    }

    .article-content {
      margin-bottom: 80px;
    }

    .article-text {
      :global(h1) {
        margin-top: 40px;
        margin-bottom: 12px;
        font-size: 1.8rem;
      }

      :global(h2) {
        margin-top: 40px;
        margin-bottom: 12px;
        font-size: 1.5rem;
      }

      :global(h3) {
        margin-top: 32px;
        margin-bottom: 12px;
        font-size: 1.3rem;
      }

      :global(h4) {
        margin-top: 24px;
        margin-bottom: 12px;
        font-size: 1.2rem;
      }

      :global(p) {
        margin-bottom: 12px;
      }
    }

    .content-end {
      margin-top: 24px;
    }
    .content-end-button {
      width: 100%;
      padding: 12px 0;
    }

    @include pc {
      .h1 {
        margin-bottom: 16px;
        font-size: rpx(min(56px, 56rpx), pc);
      }

      .tags {
        margin-bottom: 72px;
      }

      .content-end {
        display: flex;
        justify-content: center;
        margin-top: 48px;
      }
      .content-end-button {
        width: auto;
        padding: 12px 72px;
      }
    }
  </style>
</Layout>
